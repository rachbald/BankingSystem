//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Accounts_AccountType", "AccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.AccountType), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Account), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Accounts_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.Currency), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Account), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Accounts_FixedRates", "FixedRate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Common.FixedRate), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Account), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Accounts_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.User), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Account), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Log_Accounts", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.Account), "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Log), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Appointments_Appointments", "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.Appointment), "Appointment1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Common.Appointment), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Appointments_AppointmentStatus", "AppointmentStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.AppointmentStatu), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Appointment), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Log_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.Currency), "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Log), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Transactions_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Common.Currency), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Transaction), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Log_TransactionType", "TransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.TransactionType), "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Log), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Users_Towns", "Town", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.Town), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.User), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Transactions_TransactionType", "TransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.TransactionType), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Transaction), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "FK_Transactions_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.User), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Transaction), true)]
[assembly: EdmRelationshipAttribute("DSAplcDatabaseModel", "UserRoles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.User))]

#endregion

namespace Common
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DSAplcEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DSAplcEntities object using the connection string found in the 'DSAplcEntities' section of the application configuration file.
        /// </summary>
        public DSAplcEntities() : base("name=DSAplcEntities", "DSAplcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DSAplcEntities object.
        /// </summary>
        public DSAplcEntities(string connectionString) : base(connectionString, "DSAplcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DSAplcEntities object.
        /// </summary>
        public DSAplcEntities(EntityConnection connection) : base(connection, "DSAplcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountType> AccountTypes
        {
            get
            {
                if ((_AccountTypes == null))
                {
                    _AccountTypes = base.CreateObjectSet<AccountType>("AccountTypes");
                }
                return _AccountTypes;
            }
        }
        private ObjectSet<AccountType> _AccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> Appointments
        {
            get
            {
                if ((_Appointments == null))
                {
                    _Appointments = base.CreateObjectSet<Appointment>("Appointments");
                }
                return _Appointments;
            }
        }
        private ObjectSet<Appointment> _Appointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppointmentSlot> AppointmentSlots
        {
            get
            {
                if ((_AppointmentSlots == null))
                {
                    _AppointmentSlots = base.CreateObjectSet<AppointmentSlot>("AppointmentSlots");
                }
                return _AppointmentSlots;
            }
        }
        private ObjectSet<AppointmentSlot> _AppointmentSlots;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppointmentStatu> AppointmentStatus
        {
            get
            {
                if ((_AppointmentStatus == null))
                {
                    _AppointmentStatus = base.CreateObjectSet<AppointmentStatu>("AppointmentStatus");
                }
                return _AppointmentStatus;
            }
        }
        private ObjectSet<AppointmentStatu> _AppointmentStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FixedRate> FixedRates
        {
            get
            {
                if ((_FixedRates == null))
                {
                    _FixedRates = base.CreateObjectSet<FixedRate>("FixedRates");
                }
                return _FixedRates;
            }
        }
        private ObjectSet<FixedRate> _FixedRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Town> Towns
        {
            get
            {
                if ((_Towns == null))
                {
                    _Towns = base.CreateObjectSet<Town>("Towns");
                }
                return _Towns;
            }
        }
        private ObjectSet<Town> _Towns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionType> TransactionTypes
        {
            get
            {
                if ((_TransactionTypes == null))
                {
                    _TransactionTypes = base.CreateObjectSet<TransactionType>("TransactionTypes");
                }
                return _TransactionTypes;
            }
        }
        private ObjectSet<TransactionType> _TransactionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTypes(AccountType accountType)
        {
            base.AddObject("AccountTypes", accountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Appointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointments(Appointment appointment)
        {
            base.AddObject("Appointments", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppointmentSlots EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointmentSlots(AppointmentSlot appointmentSlot)
        {
            base.AddObject("AppointmentSlots", appointmentSlot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppointmentStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointmentStatus(AppointmentStatu appointmentStatu)
        {
            base.AddObject("AppointmentStatus", appointmentStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FixedRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFixedRates(FixedRate fixedRate)
        {
            base.AddObject("FixedRates", fixedRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Towns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTowns(Town town)
        {
            base.AddObject("Towns", town);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionTypes(TransactionType transactionType)
        {
            base.AddObject("TransactionTypes", transactionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="accountNo">Initial value of the AccountNo property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="currency">Initial value of the Currency property.</param>
        /// <param name="creation">Initial value of the Creation property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="user">Initial value of the User property.</param>
        public static Account CreateAccount(global::System.Int32 id, global::System.String accountNo, global::System.String name, global::System.Int32 type, global::System.String currency, global::System.DateTime creation, global::System.Decimal balance, global::System.Int32 user)
        {
            Account account = new Account();
            account.Id = id;
            account.AccountNo = accountNo;
            account.Name = name;
            account.Type = type;
            account.Currency = currency;
            account.Creation = creation;
            account.Balance = balance;
            account.User = user;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNo
        {
            get
            {
                return _AccountNo;
            }
            set
            {
                OnAccountNoChanging(value);
                ReportPropertyChanging("AccountNo");
                _AccountNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNo");
                OnAccountNoChanged();
            }
        }
        private global::System.String _AccountNo;
        partial void OnAccountNoChanging(global::System.String value);
        partial void OnAccountNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Creation
        {
            get
            {
                return _Creation;
            }
            set
            {
                OnCreationChanging(value);
                ReportPropertyChanging("Creation");
                _Creation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creation");
                OnCreationChanged();
            }
        }
        private global::System.DateTime _Creation;
        partial void OnCreationChanging(global::System.DateTime value);
        partial void OnCreationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int32 _User;
        partial void OnUserChanging(global::System.Int32 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Int32> _Rate;
        partial void OnRateChanging(Nullable<global::System.Int32> value);
        partial void OnRateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Accounts_AccountType", "AccountType")]
        public AccountType AccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("DSAplcDatabaseModel.FK_Accounts_AccountType", "AccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("DSAplcDatabaseModel.FK_Accounts_AccountType", "AccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountType> AccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("DSAplcDatabaseModel.FK_Accounts_AccountType", "AccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountType>("DSAplcDatabaseModel.FK_Accounts_AccountType", "AccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Accounts_Currency", "Currency")]
        public Currency Currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Accounts_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Accounts_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> Currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Accounts_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("DSAplcDatabaseModel.FK_Accounts_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Accounts_FixedRates", "FixedRate")]
        public FixedRate FixedRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedRate>("DSAplcDatabaseModel.FK_Accounts_FixedRates", "FixedRate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedRate>("DSAplcDatabaseModel.FK_Accounts_FixedRates", "FixedRate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FixedRate> FixedRateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedRate>("DSAplcDatabaseModel.FK_Accounts_FixedRates", "FixedRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FixedRate>("DSAplcDatabaseModel.FK_Accounts_FixedRates", "FixedRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Accounts_Users", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSAplcDatabaseModel.FK_Accounts_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSAplcDatabaseModel.FK_Accounts_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSAplcDatabaseModel.FK_Accounts_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSAplcDatabaseModel.FK_Accounts_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Log_Accounts", "Log")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("DSAplcDatabaseModel.FK_Log_Accounts", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("DSAplcDatabaseModel.FK_Log_Accounts", "Log", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="AccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AccountType CreateAccountType(global::System.Int32 id, global::System.String name)
        {
            AccountType accountType = new AccountType();
            accountType.Id = id;
            accountType.Name = name;
            return accountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Accounts_AccountType", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("DSAplcDatabaseModel.FK_Accounts_AccountType", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("DSAplcDatabaseModel.FK_Accounts_AccountType", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static Appointment CreateAppointment(global::System.Int32 id, global::System.DateTime date, global::System.String time, global::System.Int32 user, global::System.Int32 state)
        {
            Appointment appointment = new Appointment();
            appointment.Id = id;
            appointment.Date = date;
            appointment.Time = time;
            appointment.User = user;
            appointment.State = state;
            return appointment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.String _Time;
        partial void OnTimeChanging(global::System.String value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int32 _User;
        partial void OnUserChanging(global::System.Int32 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Appointments_Appointments", "Appointment1")]
        public Appointment Appointments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DSAplcDatabaseModel.FK_Appointments_Appointments", "Appointment1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DSAplcDatabaseModel.FK_Appointments_Appointments", "Appointment1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> Appointments1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DSAplcDatabaseModel.FK_Appointments_Appointments", "Appointment1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("DSAplcDatabaseModel.FK_Appointments_Appointments", "Appointment1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Appointments_Appointments", "Appointment")]
        public Appointment Appointment1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DSAplcDatabaseModel.FK_Appointments_Appointments", "Appointment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DSAplcDatabaseModel.FK_Appointments_Appointments", "Appointment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> Appointment1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DSAplcDatabaseModel.FK_Appointments_Appointments", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("DSAplcDatabaseModel.FK_Appointments_Appointments", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Appointments_AppointmentStatus", "AppointmentStatu")]
        public AppointmentStatu AppointmentStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppointmentStatu>("DSAplcDatabaseModel.FK_Appointments_AppointmentStatus", "AppointmentStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppointmentStatu>("DSAplcDatabaseModel.FK_Appointments_AppointmentStatus", "AppointmentStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppointmentStatu> AppointmentStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppointmentStatu>("DSAplcDatabaseModel.FK_Appointments_AppointmentStatus", "AppointmentStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppointmentStatu>("DSAplcDatabaseModel.FK_Appointments_AppointmentStatus", "AppointmentStatu", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="AppointmentSlot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppointmentSlot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppointmentSlot object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="weekday">Initial value of the Weekday property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static AppointmentSlot CreateAppointmentSlot(global::System.Int32 id, global::System.String weekday, global::System.String time)
        {
            AppointmentSlot appointmentSlot = new AppointmentSlot();
            appointmentSlot.Id = id;
            appointmentSlot.Weekday = weekday;
            appointmentSlot.Time = time;
            return appointmentSlot;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Weekday
        {
            get
            {
                return _Weekday;
            }
            set
            {
                OnWeekdayChanging(value);
                ReportPropertyChanging("Weekday");
                _Weekday = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Weekday");
                OnWeekdayChanged();
            }
        }
        private global::System.String _Weekday;
        partial void OnWeekdayChanging(global::System.String value);
        partial void OnWeekdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.String _Time;
        partial void OnTimeChanging(global::System.String value);
        partial void OnTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="AppointmentStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppointmentStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppointmentStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static AppointmentStatu CreateAppointmentStatu(global::System.Int32 id, global::System.String state)
        {
            AppointmentStatu appointmentStatu = new AppointmentStatu();
            appointmentStatu.Id = id;
            appointmentStatu.State = state;
            return appointmentStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Appointments_AppointmentStatus", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("DSAplcDatabaseModel.FK_Appointments_AppointmentStatus", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("DSAplcDatabaseModel.FK_Appointments_AppointmentStatus", "Appointment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="currency1">Initial value of the Currency1 property.</param>
        public static Currency CreateCurrency(global::System.String code, global::System.String currency1)
        {
            Currency currency = new Currency();
            currency.Code = code;
            currency.Currency1 = currency1;
            return currency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency1
        {
            get
            {
                return _Currency1;
            }
            set
            {
                OnCurrency1Changing(value);
                ReportPropertyChanging("Currency1");
                _Currency1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Currency1");
                OnCurrency1Changed();
            }
        }
        private global::System.String _Currency1;
        partial void OnCurrency1Changing(global::System.String value);
        partial void OnCurrency1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Accounts_Currency", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("DSAplcDatabaseModel.FK_Accounts_Currency", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("DSAplcDatabaseModel.FK_Accounts_Currency", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Log_Currency", "Log")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("DSAplcDatabaseModel.FK_Log_Currency", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("DSAplcDatabaseModel.FK_Log_Currency", "Log", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Transactions_Currency", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("DSAplcDatabaseModel.FK_Transactions_Currency", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("DSAplcDatabaseModel.FK_Transactions_Currency", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="FixedRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FixedRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FixedRate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="interest">Initial value of the Interest property.</param>
        public static FixedRate CreateFixedRate(global::System.Int32 id, global::System.Int32 months, global::System.Decimal interest)
        {
            FixedRate fixedRate = new FixedRate();
            fixedRate.Id = id;
            fixedRate.Months = months;
            fixedRate.Interest = interest;
            return fixedRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Interest
        {
            get
            {
                return _Interest;
            }
            set
            {
                OnInterestChanging(value);
                ReportPropertyChanging("Interest");
                _Interest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Interest");
                OnInterestChanged();
            }
        }
        private global::System.Decimal _Interest;
        partial void OnInterestChanging(global::System.Decimal value);
        partial void OnInterestChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Accounts_FixedRates", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("DSAplcDatabaseModel.FK_Accounts_FixedRates", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("DSAplcDatabaseModel.FK_Accounts_FixedRates", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="other">Initial value of the Other property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="currency">Initial value of the Currency property.</param>
        /// <param name="client">Initial value of the Client property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.DateTime date, global::System.Int32 account, global::System.String other, global::System.Decimal amount, global::System.Int32 type, global::System.String currency, global::System.Int32 client)
        {
            Log log = new Log();
            log.Id = id;
            log.Date = date;
            log.Account = account;
            log.Other = other;
            log.Amount = amount;
            log.Type = type;
            log.Currency = currency;
            log.Client = client;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.Int32 _Account;
        partial void OnAccountChanging(global::System.Int32 value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Other
        {
            get
            {
                return _Other;
            }
            set
            {
                OnOtherChanging(value);
                ReportPropertyChanging("Other");
                _Other = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Other");
                OnOtherChanged();
            }
        }
        private global::System.String _Other;
        partial void OnOtherChanging(global::System.String value);
        partial void OnOtherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Client
        {
            get
            {
                return _Client;
            }
            set
            {
                OnClientChanging(value);
                ReportPropertyChanging("Client");
                _Client = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Client");
                OnClientChanged();
            }
        }
        private global::System.Int32 _Client;
        partial void OnClientChanging(global::System.Int32 value);
        partial void OnClientChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Log_Accounts", "Account")]
        public Account Account1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DSAplcDatabaseModel.FK_Log_Accounts", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DSAplcDatabaseModel.FK_Log_Accounts", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> Account1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DSAplcDatabaseModel.FK_Log_Accounts", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("DSAplcDatabaseModel.FK_Log_Accounts", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Log_Currency", "Currency")]
        public Currency Currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Log_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Log_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> Currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Log_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("DSAplcDatabaseModel.FK_Log_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Log_TransactionType", "TransactionType")]
        public TransactionType TransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DSAplcDatabaseModel.FK_Log_TransactionType", "TransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DSAplcDatabaseModel.FK_Log_TransactionType", "TransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionType> TransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DSAplcDatabaseModel.FK_Log_TransactionType", "TransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionType>("DSAplcDatabaseModel.FK_Log_TransactionType", "TransactionType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "UserRoles", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DSAplcDatabaseModel.UserRoles", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DSAplcDatabaseModel.UserRoles", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="Town")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Town : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Town object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Town CreateTown(global::System.Int32 id, global::System.String name)
        {
            Town town = new Town();
            town.Id = id;
            town.Name = name;
            return town;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Users_Towns", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DSAplcDatabaseModel.FK_Users_Towns", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DSAplcDatabaseModel.FK_Users_Towns", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="currentAccount">Initial value of the CurrentAccount property.</param>
        /// <param name="secondaryAccount">Initial value of the SecondaryAccount property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Transaction CreateTransaction(global::System.Int32 id, global::System.Int32 user, global::System.Int32 type, global::System.Decimal amount, global::System.String currentAccount, global::System.String secondaryAccount, global::System.DateTime date)
        {
            Transaction transaction = new Transaction();
            transaction.Id = id;
            transaction.User = user;
            transaction.Type = type;
            transaction.Amount = amount;
            transaction.CurrentAccount = currentAccount;
            transaction.SecondaryAccount = secondaryAccount;
            transaction.Date = date;
            return transaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int32 _User;
        partial void OnUserChanging(global::System.Int32 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentAccount
        {
            get
            {
                return _CurrentAccount;
            }
            set
            {
                OnCurrentAccountChanging(value);
                ReportPropertyChanging("CurrentAccount");
                _CurrentAccount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurrentAccount");
                OnCurrentAccountChanged();
            }
        }
        private global::System.String _CurrentAccount;
        partial void OnCurrentAccountChanging(global::System.String value);
        partial void OnCurrentAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecondaryAccount
        {
            get
            {
                return _SecondaryAccount;
            }
            set
            {
                OnSecondaryAccountChanging(value);
                ReportPropertyChanging("SecondaryAccount");
                _SecondaryAccount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecondaryAccount");
                OnSecondaryAccountChanged();
            }
        }
        private global::System.String _SecondaryAccount;
        partial void OnSecondaryAccountChanging(global::System.String value);
        partial void OnSecondaryAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Transactions_Currency", "Currency")]
        public Currency Currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Transactions_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Transactions_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> Currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DSAplcDatabaseModel.FK_Transactions_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("DSAplcDatabaseModel.FK_Transactions_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Transactions_TransactionType", "TransactionType")]
        public TransactionType TransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DSAplcDatabaseModel.FK_Transactions_TransactionType", "TransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DSAplcDatabaseModel.FK_Transactions_TransactionType", "TransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionType> TransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DSAplcDatabaseModel.FK_Transactions_TransactionType", "TransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionType>("DSAplcDatabaseModel.FK_Transactions_TransactionType", "TransactionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Transactions_Users", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSAplcDatabaseModel.FK_Transactions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSAplcDatabaseModel.FK_Transactions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSAplcDatabaseModel.FK_Transactions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSAplcDatabaseModel.FK_Transactions_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="TransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="transaction">Initial value of the Transaction property.</param>
        public static TransactionType CreateTransactionType(global::System.Int32 id, global::System.String transaction)
        {
            TransactionType transactionType = new TransactionType();
            transactionType.Id = id;
            transactionType.Transaction = transaction;
            return transactionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Transaction
        {
            get
            {
                return _Transaction;
            }
            set
            {
                OnTransactionChanging(value);
                ReportPropertyChanging("Transaction");
                _Transaction = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Transaction");
                OnTransactionChanged();
            }
        }
        private global::System.String _Transaction;
        partial void OnTransactionChanging(global::System.String value);
        partial void OnTransactionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Log_TransactionType", "Log")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("DSAplcDatabaseModel.FK_Log_TransactionType", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("DSAplcDatabaseModel.FK_Log_TransactionType", "Log", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Transactions_TransactionType", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("DSAplcDatabaseModel.FK_Transactions_TransactionType", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("DSAplcDatabaseModel.FK_Transactions_TransactionType", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSAplcDatabaseModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="pin">Initial value of the Pin property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="town">Initial value of the Town property.</param>
        /// <param name="noOfAttempts">Initial value of the NoOfAttempts property.</param>
        /// <param name="blocked">Initial value of the Blocked property.</param>
        /// <param name="dob">Initial value of the Dob property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        /// <param name="encryptionAlgorithm">Initial value of the EncryptionAlgorithm property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String pin, global::System.String name, global::System.String surname, global::System.String email, global::System.String address, global::System.String street, global::System.Int32 town, global::System.Int32 noOfAttempts, global::System.Boolean blocked, global::System.DateTime dob, global::System.String token, global::System.Int32 encryptionAlgorithm)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.Pin = pin;
            user.Name = name;
            user.Surname = surname;
            user.Email = email;
            user.Address = address;
            user.Street = street;
            user.Town = town;
            user.NoOfAttempts = noOfAttempts;
            user.Blocked = blocked;
            user.Dob = dob;
            user.Token = token;
            user.EncryptionAlgorithm = encryptionAlgorithm;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pin
        {
            get
            {
                return _Pin;
            }
            set
            {
                OnPinChanging(value);
                ReportPropertyChanging("Pin");
                _Pin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pin");
                OnPinChanged();
            }
        }
        private global::System.String _Pin;
        partial void OnPinChanging(global::System.String value);
        partial void OnPinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Town
        {
            get
            {
                return _Town;
            }
            set
            {
                OnTownChanging(value);
                ReportPropertyChanging("Town");
                _Town = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Town");
                OnTownChanged();
            }
        }
        private global::System.Int32 _Town;
        partial void OnTownChanging(global::System.Int32 value);
        partial void OnTownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoOfAttempts
        {
            get
            {
                return _NoOfAttempts;
            }
            set
            {
                OnNoOfAttemptsChanging(value);
                ReportPropertyChanging("NoOfAttempts");
                _NoOfAttempts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfAttempts");
                OnNoOfAttemptsChanged();
            }
        }
        private global::System.Int32 _NoOfAttempts;
        partial void OnNoOfAttemptsChanging(global::System.Int32 value);
        partial void OnNoOfAttemptsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Blocked
        {
            get
            {
                return _Blocked;
            }
            set
            {
                OnBlockedChanging(value);
                ReportPropertyChanging("Blocked");
                _Blocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Blocked");
                OnBlockedChanged();
            }
        }
        private global::System.Boolean _Blocked;
        partial void OnBlockedChanging(global::System.Boolean value);
        partial void OnBlockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Dob
        {
            get
            {
                return _Dob;
            }
            set
            {
                OnDobChanging(value);
                ReportPropertyChanging("Dob");
                _Dob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dob");
                OnDobChanged();
            }
        }
        private global::System.DateTime _Dob;
        partial void OnDobChanging(global::System.DateTime value);
        partial void OnDobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EncryptionAlgorithm
        {
            get
            {
                return _EncryptionAlgorithm;
            }
            set
            {
                OnEncryptionAlgorithmChanging(value);
                ReportPropertyChanging("EncryptionAlgorithm");
                _EncryptionAlgorithm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EncryptionAlgorithm");
                OnEncryptionAlgorithmChanged();
            }
        }
        private global::System.Int32 _EncryptionAlgorithm;
        partial void OnEncryptionAlgorithmChanging(global::System.Int32 value);
        partial void OnEncryptionAlgorithmChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Accounts_Users", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("DSAplcDatabaseModel.FK_Accounts_Users", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("DSAplcDatabaseModel.FK_Accounts_Users", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Users_Towns", "Town")]
        public Town Town1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("DSAplcDatabaseModel.FK_Users_Towns", "Town").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("DSAplcDatabaseModel.FK_Users_Towns", "Town").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Town> Town1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("DSAplcDatabaseModel.FK_Users_Towns", "Town");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Town>("DSAplcDatabaseModel.FK_Users_Towns", "Town", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "FK_Transactions_Users", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("DSAplcDatabaseModel.FK_Transactions_Users", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("DSAplcDatabaseModel.FK_Transactions_Users", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSAplcDatabaseModel", "UserRoles", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("DSAplcDatabaseModel.UserRoles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("DSAplcDatabaseModel.UserRoles", "Role", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
